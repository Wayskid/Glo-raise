import React, { useState } from "react";
import { NavLink, useLocation } from "react-router-dom";

export default function Nav() {
  const { pathname } = useLocation();
  function matchRoute(route) {
    if (pathname === route) {
      return true;
    } else {
      return false;
    }
  }

  const [mobileMenuShown, setMobileMenuShown] = useState(false);

  return (
    <div className="fixed top-0 w-full [font-family:'Roboto',sans-serif;] bg-white z-40">
      <div className="flex items-center w-[min(80rem,100%)] mx-auto px-4 md:px-[60px] lg:px-[132px] py-[24px] relative z-40 bg-white">
        <NavLink to="/" className="mr-auto ">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="159"
            height="31"
            viewBox="0 0 159 31"
            fill="none"
          >
            <path
              fill-rule="evenodd"
              clip-rule="evenodd"
              d="M119.119 0.122253H113.836V6.0614H119.119V0.122253ZM36.5551 0.15382H31.807V29.823H36.5551V0.15382ZM102.485 8.34251C97.5312 8.34251 93.6779 11.4531 93.3557 15.7266L93.3203 16.1948H97.8073L97.8339 15.7879C97.9488 14.0307 99.7371 12.3685 102.385 12.3685C103.883 12.3685 104.991 12.768 105.719 13.4097C106.441 14.046 106.835 14.9607 106.835 16.095C106.835 16.3781 106.753 16.5504 106.639 16.6566C106.52 16.7674 106.298 16.8679 105.897 16.8679H101.682C99.2229 16.8679 97.153 17.4889 95.6884 18.6575C94.2129 19.8347 93.3879 21.5402 93.3879 23.6135C93.3879 25.5427 94.121 27.1907 95.4186 28.3521C96.7123 29.51 98.5357 30.1577 100.679 30.1577C103.384 30.1577 106.196 29.0338 107.5 27.2255C107.5 27.7255 107.5 29.2255 107.5 29.7255H111.583V25.1919V16.2964C111.583 13.9284 110.672 11.9262 109.058 10.5216C107.45 9.12182 105.176 8.34251 102.485 8.34251ZM101.448 26.1654C100.404 26.1654 99.5628 25.8762 98.9914 25.4108C98.4273 24.9516 98.1025 24.3036 98.1025 23.5128C98.1025 22.5689 98.479 21.8236 99.1369 21.3041C99.8054 20.7762 100.797 20.4575 102.05 20.4575H106.835V20.492C106.835 22.2904 106.323 23.7 105.422 24.657C104.525 25.6108 103.193 26.1654 101.448 26.1654ZM78.8028 17.1073H62.2473V20.7976H78.8028V17.1073ZM118.852 8.64413H114.104V29.788H118.852V8.64413ZM128.985 12.302C129.786 12.302 130.696 12.52 131.426 12.992C132.145 13.457 132.685 14.1631 132.802 15.1725L132.847 15.5578H137.337L137.313 15.0994C137.206 13.0639 136.312 11.3542 134.835 10.1598C133.364 8.96969 131.339 8.3096 128.985 8.3096C126.801 8.3096 124.901 8.91842 123.537 10.0166C122.166 11.1206 121.36 12.7042 121.36 14.5853C121.36 16.8614 122.122 18.3117 123.321 19.2441C124.487 20.1514 126.016 20.5242 127.454 20.7828C127.793 20.8439 128.133 20.8993 128.464 20.9534L128.465 20.9536L128.53 20.9643C128.884 21.022 129.227 21.0784 129.557 21.14C130.222 21.2635 130.816 21.4039 131.314 21.6026C131.81 21.8009 132.183 22.0465 132.433 22.3641C132.678 22.6744 132.833 23.0887 132.833 23.6813C132.833 24.8139 131.674 25.998 129.453 25.998C128.221 25.998 127.255 25.6813 126.572 25.1328C125.895 24.5884 125.458 23.7842 125.335 22.7249L125.291 22.3396H120.796L120.825 22.8024C120.966 25.0421 121.876 26.8854 123.396 28.1644C124.912 29.4392 127 30.1247 129.453 30.1247C131.896 30.1247 133.901 29.5124 135.304 28.375C136.717 27.2293 137.481 25.5826 137.481 23.6141C137.481 21.1972 136.722 19.6481 135.52 18.6517C134.344 17.6773 132.803 17.2836 131.35 17.0342C130.911 16.9588 130.46 16.894 130.027 16.8316C129.75 16.7917 129.48 16.7528 129.225 16.7129C128.553 16.6077 127.952 16.4913 127.449 16.32C126.945 16.1484 126.573 15.9334 126.328 15.6542C126.091 15.3856 125.94 15.0226 125.94 14.4846C125.94 13.8405 126.221 13.3125 126.728 12.9329C127.245 12.5457 128.016 12.302 128.985 12.302ZM149.188 25.9309C150.615 25.9309 151.746 25.6169 152.577 25.0637C153.4 24.516 153.957 23.7144 154.218 22.6746L154.3 22.306H159L158.914 22.8142C158.169 27.231 154.3 30.0911 149.154 30.0911C142.622 30.0911 138.585 24.9557 138.585 19.0829C138.585 16.1589 139.491 13.4658 141.233 11.4977C142.98 9.52304 145.543 8.3096 148.786 8.3096C152.023 8.3096 154.543 9.46827 156.251 11.3281C157.954 13.1824 158.82 15.7013 158.82 18.3781C158.82 18.9287 158.786 19.5796 158.751 19.9615L158.715 20.3575H143.348C143.792 23.7338 146.082 25.9309 149.188 25.9309ZM148.786 12.3356C150.368 12.3356 151.611 12.8181 152.484 13.6328C153.262 14.3596 153.775 15.3788 153.956 16.6336H143.499C143.82 15.2669 144.403 14.2421 145.197 13.5401C146.085 12.7553 147.28 12.3356 148.786 12.3356ZM49.3011 26.0012C47.4918 26.0012 45.9966 25.3252 44.9508 24.1791C43.9022 23.0297 43.2794 21.378 43.2794 19.3881C43.2794 17.3981 43.9022 15.7465 44.9508 14.5971C45.9966 13.4509 47.4918 12.775 49.3011 12.775C51.1102 12.775 52.5964 13.4507 53.6336 14.5959C54.674 15.7448 55.2893 17.3967 55.2893 19.3881C55.2893 21.378 54.6665 23.0301 53.6215 24.1796C52.5794 25.326 51.0927 26.0012 49.3011 26.0012ZM49.3011 8.4805C43.0072 8.4805 38.4311 13.0724 38.4311 19.3881C38.4311 25.7037 43.0072 30.2957 49.3011 30.2957C55.5969 30.2957 60.1377 25.702 60.1377 19.3881C60.1377 13.0752 55.6313 8.4805 49.3011 8.4805ZM92.6845 8.64413H80.5108V29.8216H85.292V13.3078H92.6845V8.64413ZM28.9988 15.3944H14.3831V20.3601H22.5125C21.1248 23.6553 18.2199 25.7322 14.4826 25.7322C9.39358 25.7322 5.18285 21.3193 5.18285 15.7963C5.18285 10.2733 9.39358 5.86029 14.4826 5.86029C16.5346 5.86029 18.2144 6.35358 19.578 7.33147C20.944 8.31113 22.0287 9.80314 22.8429 11.862L22.8498 11.8794L23.045 12.2711H28.351L28.1467 11.4506L28.1435 11.4397C27.4442 9.14619 26.2246 6.60001 24.07 4.62502C21.9062 2.64167 18.8311 1.26391 14.4835 1.26372C6.48091 1.22962 0 7.77084 0 15.7963C0 23.8237 6.48273 30.3287 14.4826 30.3287C17.9436 30.3287 21.2417 28.9053 23.4697 26.3906C24.0214 25.7728 24.48 25.0822 24.8696 24.3526L25.321 29.2089V29.8252H28.9988V15.3944Z"
              fill="#051C09"
            />
          </svg>
        </NavLink>
        <div className="md:flex items-center gap-12 hidden">
          <NavLink to="/" className="py-2 border-b-[3px] border-Hero-Purple">
            How it Works
          </NavLink>
          <NavLink to="/for_funders" className="py-2">
            For Funders
          </NavLink>
          <NavLink to="/about" className="py-2">
            About Us
          </NavLink>
          <NavLink
            to="/get_started"
            className="px-4 py-2 border-[1px] border-Hero-Purple bg-Hero-Purple rounded-[4px] text-white"
          >
            Get Started
          </NavLink>
        </div>
        <button
          className="md:hidden"
          onClick={() => setMobileMenuShown(!mobileMenuShown)}
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="45"
            height="45"
            viewBox="0 0 24 25"
            fill="none"
          >
            <path
              d="M3 6.49902H21V8.49902H3V6.49902ZM3 11.499H21V13.499H3V11.499ZM3 16.499H21V18.499H3V16.499Z"
              fill="black"
            />
          </svg>
        </button>
      </div>
      <div
        className={`absolute top-[93px] grid left-0 w-full bg-white md:hidden text-center text-xl [transition:0.9s_ease] z-30 ${
          !mobileMenuShown ? "-translate-y-[200%]" : "translate-y-[0]"
        }`}
      >
        <NavLink
          onClick={() => setMobileMenuShown(false)}
          to="/"
          className={`${
            matchRoute("/") && "font-semibold bg-Lavender"
          }  p-4 relative`}
        >
          How it Works
          {matchRoute("/") && (
            <span className="w-[3px] h-full bg-Hero-Purple absolute left-0 top-0"></span>
          )}
        </NavLink>
        <NavLink
          onClick={() => setMobileMenuShown(false)}
          to="/for_funders"
          className={`${
            matchRoute("/for_funders") && "font-semibold bg-Lavender"
          } p-4 relative`}
        >
          For Funders
          {matchRoute("/for_funders") && (
            <span className="w-[3px] h-full bg-Hero-Purple absolute left-0 top-0"></span>
          )}
        </NavLink>
        <NavLink
          onClick={() => setMobileMenuShown(false)}
          to="/about"
          className={`${
            matchRoute("/about") && "font-semibold bg-Lavender"
          } p-4 relative`}
        >
          About Us
          {matchRoute("/about") && (
            <span className="w-[3px] h-full bg-Hero-Purple absolute left-0 top-0"></span>
          )}
        </NavLink>
        <NavLink
          onClick={() => setMobileMenuShown(false)}
          to="/get_started"
          className={`${
            matchRoute("/about") && "font-semibold bg-Lavender"
          } p-4 relative`}
        >
          Get Started
          {matchRoute("/about") && (
            <span className="w-[3px] h-full bg-Hero-Purple absolute left-0 top-0"></span>
          )}
        </NavLink>
      </div>
    </div>
  );
}
